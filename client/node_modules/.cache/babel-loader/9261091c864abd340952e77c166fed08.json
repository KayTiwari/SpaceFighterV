{"ast":null,"code":"import _classCallCheck from \"/Users/abhiktiwari/dev/assignments/projects/invisi/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/abhiktiwari/dev/assignments/projects/invisi/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/abhiktiwari/dev/assignments/projects/invisi/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/abhiktiwari/dev/assignments/projects/invisi/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/abhiktiwari/dev/assignments/projects/invisi/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/abhiktiwari/dev/assignments/projects/invisi/client/src/GameComponents/Invader.js\";\nimport React, { Component } from 'react';\nimport Bullet from './Bullet';\nexport var Direction = {\n  Left: 0,\n  Right: 1\n};\n\nvar Invader =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Invader, _Component);\n\n  function Invader(args) {\n    var _this;\n\n    _classCallCheck(this, Invader);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Invader).call(this));\n\n    _this.reverse = function () {\n      if (_this.direction === Direction.Right) {\n        _this.position.x -= 10;\n        _this.direction = Direction.Left;\n      } else {\n        _this.direction = Direction.Right;\n        _this.position.x += 10;\n      }\n    };\n\n    _this.update = function () {\n      if (_this.direction === Direction.Right) {\n        _this.position.x += _this.speed;\n      } else {\n        _this.position.x -= _this.speed;\n      }\n\n      var nextShot = Math.random() * 5000;\n\n      if (Date.now() - _this.lastShot > 250 * nextShot) {\n        var bullet = new Bullet({\n          position: {\n            x: _this.position.x,\n            y: _this.position.y - 5\n          },\n          speed: 2.5,\n          radius: 15,\n          direction: \"down\"\n        });\n\n        _this.bullets.push(bullet);\n\n        _this.lastShot = Date.now();\n      }\n    };\n\n    _this.die = function () {\n      _this.delete = true; // this.onDie();\n    };\n\n    _this.state = {};\n    _this.direction = Direction.Right;\n    _this.position = args.position;\n    _this.speed = args.speed;\n    _this.radius = args.radius;\n    _this.delete = false;\n    _this.onDie = args.onDie;\n    _this.bullets = [];\n    _this.lastShot = 0;\n    return _this;\n  }\n\n  _createClass(Invader, [{\n    key: \"renderBullets\",\n    value: function renderBullets(state) {\n      var index = 0;\n      var _iteratorNormalCompletion = true;\n      var _didIteratorError = false;\n      var _iteratorError = undefined;\n\n      try {\n        for (var _iterator = this.bullets[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n          var bullet = _step.value;\n\n          if (bullet.delete) {\n            this.bullets.splice(index, 1);\n          } else {\n            this.bullets[index].update();\n            this.bullets[index].render(state);\n          }\n\n          index++;\n        }\n      } catch (err) {\n        _didIteratorError = true;\n        _iteratorError = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion && _iterator.return != null) {\n            _iterator.return();\n          }\n        } finally {\n          if (_didIteratorError) {\n            throw _iteratorError;\n          }\n        }\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render(state) {\n      var context = state.context;\n      this.renderBullets(state);\n      context.save();\n      context.translate(this.position.x, this.position.y);\n      context.strokeStyle = '#FFFF00';\n      context.fillStyle = '#FFBD4A';\n      context.lineWidth = 2;\n      context.beginPath();\n      context.moveTo(-5, 25);\n      context.lineTo(5, 25);\n      context.lineTo(5, 0);\n      context.lineTo(15, 0);\n      context.lineTo(15, -15);\n      context.lineTo(-15, -15);\n      context.lineTo(-15, 15);\n      context.lineTo(5, -5);\n      context.closePath();\n      context.fill();\n      context.stroke();\n      context.restore();\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      });\n    }\n  }]);\n\n  return Invader;\n}(Component);\n\nexport default Invader;","map":{"version":3,"sources":["/Users/abhiktiwari/dev/assignments/projects/invisi/client/src/GameComponents/Invader.js"],"names":["React","Component","Bullet","Direction","Left","Right","Invader","args","reverse","direction","position","x","update","speed","nextShot","Math","random","Date","now","lastShot","bullet","y","radius","bullets","push","die","delete","state","onDie","index","splice","render","context","renderBullets","save","translate","strokeStyle","fillStyle","lineWidth","beginPath","moveTo","lineTo","closePath","fill","stroke","restore"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport Bullet from './Bullet';\n\nexport const Direction = {\n    Left: 0,\n    Right: 1\n}\n\nclass Invader extends Component {\n    constructor(args){\n        super();\n\n        this.state = {\n\n        }\n        this.direction = Direction.Right;\n        this.position = args.position;\n        this.speed = args.speed;\n        this.radius = args.radius;\n        this.delete = false;\n        this.onDie = args.onDie\n        this.bullets = [];\n        this.lastShot = 0;\n    }\n    reverse = () => {\n        if (this.direction === Direction.Right){\n            this.position.x -= 10;\n            this.direction = Direction.Left;\n        } else {\n            this.direction = Direction.Right;\n            this.position.x += 10;\n        }\n    }\n\n    update = () => {\n        if (this.direction === Direction.Right) {\n            this.position.x += this.speed;\n        } else {\n            this.position.x -= this.speed;\n        }\n        let nextShot = Math.random() * 5000;\n        if (Date.now() - this.lastShot > 250 * nextShot) {\n            const bullet = new Bullet ({\n                position: {x: this.position.x, y: this.position.y - 5},\n                speed: 2.5,\n                radius: 15,\n                direction: \"down\"\n            })\n            this.bullets.push(bullet);\n            this.lastShot = Date.now();\n        }\n    }\n    renderBullets(state) {\n        let index = 0;\n        for(let bullet of this.bullets) {\n            if (bullet.delete) {\n                this.bullets.splice(index, 1);\n            } else {\n                this.bullets[index].update();\n                this.bullets[index].render(state);\n            }\n            index++;\n        }\n    }\n\n    die = () => {\n        this.delete = true;\n        // this.onDie();\n    }\n\n    render(state) {\n        const context = state.context;\n        this.renderBullets(state);\n        context.save();\n        context.translate(this.position.x, this.position.y);\n        context.strokeStyle = '#FFFF00';\n        context.fillStyle = '#FFBD4A';\n        context.lineWidth = 2;\n        context.beginPath();\n        context.moveTo(-5, 25);\n        context.lineTo(5, 25);\n        context.lineTo(5, 0);\n        context.lineTo(15, 0);\n        context.lineTo(15, -15);\n        context.lineTo(-15, -15);\n        context.lineTo(-15, 15);\n        context.lineTo(5, -5);\n        context.closePath();\n        context.fill();\n        context.stroke();\n        context.restore();\n        return (\n            <div></div>\n        )\n    }\n}\nexport default Invader"]},"metadata":{},"sourceType":"module"}